{"ast":null,"code":"var _jsxFileName = \"/Users/ehsan/Desktop/projects/rr/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TodoForm from \"./components/TodoForm\";\nimport Todos from \"./components/Todos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst todos = [{\n  task: 'clean',\n  id: Math.random() * 1000,\n  completed: false\n}];\n\nconst App = () => {\n  _s();\n\n  const [state, setState] = useState(todos);\n  console.log(...state);\n\n  const addNewTodo = input => {\n    const newObj = {\n      task: input,\n      id: Math.random() * 1000,\n      completed: false\n    };\n    setState([...state, newObj]);\n  };\n\n  const toggleCompleted = id => {\n    state.map((item, index) => {\n      if (item.id === id) {\n        setState([{ ...state,\n          ...item,\n          completed: !item.completed\n        }]);\n        console.log(state);\n      } else {\n        return item;\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Todos, {\n      state: state,\n      toggleCompleted: toggleCompleted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addNewTodo: addNewTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"PadO06VdbAkT5GNMp35dZCZrejc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ehsan/Desktop/projects/rr/src/App.js"],"names":["React","useState","TodoForm","Todos","todos","task","id","Math","random","completed","App","state","setState","console","log","addNewTodo","input","newObj","toggleCompleted","map","item","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AACA,MAAMC,KAAK,GAAG,CACV;AACAC,EAAAA,IAAI,EAAE,OADN;AAEAC,EAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,KAAgB,IAFpB;AAGAC,EAAAA,SAAS,EAAE;AAHX,CADU,CAAd;;AAQA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACG,KAAD,CAAlC;AAEJS,EAAAA,OAAO,CAACC,GAAR,CAAY,GAAGH,KAAf;;AAEI,QAAMI,UAAU,GAAIC,KAAD,IAAW;AAC1B,UAAMC,MAAM,GAAG;AACXZ,MAAAA,IAAI,EAAEW,KADK;AAEXV,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,KAAgB,IAFT;AAGXC,MAAAA,SAAS,EAAE;AAHA,KAAf;AAKJG,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAUM,MAAV,CAAD,CAAR;AACC,GAPD;;AASA,QAAMC,eAAe,GAAIZ,EAAD,IAAQ;AAC5BK,IAAAA,KAAK,CAACQ,GAAN,CAAU,CAACC,IAAD,EAAMC,KAAN,KAAgB;AACtB,UAAGD,IAAI,CAACd,EAAL,KAAYA,EAAf,EAAmB;AACfM,QAAAA,QAAQ,CAAC,CAEL,EACI,GAAGD,KADP;AAEI,aAAGS,IAFP;AAGIX,UAAAA,SAAS,EAAE,CAACW,IAAI,CAACX;AAHrB,SAFK,CAAD,CAAR;AAQAI,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEH,OAXD,MAWM;AACF,eAAOS,IAAP;AACH;AACJ,KAfD;AAiBH,GAlBD;;AAqBA,sBACI;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,KAAK,EAAET,KAAd;AAAqB,MAAA,eAAe,EAAEO;AAAtC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,UAAU,EAAEH;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAzCD;;GAAML,G;;KAAAA,G;AA2CN,eAAeA,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport TodoForm from \"./components/TodoForm\";\nimport Todos from \"./components/Todos\";\nconst todos = [\n    {\n    task: 'clean',\n    id: Math.random() * 1000,\n    completed: false\n}\n]\n\nconst App = () => {\n    const [state, setState] = useState(todos)\n\nconsole.log(...state)\n\n    const addNewTodo = (input) => {\n        const newObj = {\n            task: input,\n            id: Math.random() * 1000,\n            completed: false\n        }\n    setState([...state,newObj])\n    }\n\n    const toggleCompleted = (id) => {\n        state.map((item,index) => {\n            if(item.id === id) {\n                setState([\n\n                    {\n                        ...state,\n                        ...item,\n                        completed: !item.completed\n                    }\n                ])\n                console.log(state)\n\n            }else {\n                return item\n            }\n        })\n\n    }\n\n\n    return (\n        <div>\n            <Todos state={state} toggleCompleted={toggleCompleted}/>\n            <TodoForm addNewTodo={addNewTodo}/>\n        </div>\n    );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}