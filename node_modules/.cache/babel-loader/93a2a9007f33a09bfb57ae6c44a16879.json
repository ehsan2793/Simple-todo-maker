{"ast":null,"code":"var _jsxFileName = \"/Users/ehsan/Desktop/projects/rr/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport InputForm from \"./components/InputForm\";\nimport Todos from \"./components/Todos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst todos = [{\n  task: \"clean\",\n  id: Math.random() * 1000,\n  completed: false\n}];\n\nconst App = () => {\n  _s();\n\n  const [state, setState] = useState(todos);\n\n  const addToList = input => {\n    const newObject = {\n      task: input,\n      id: Math.random() * 1000,\n      completed: false\n    };\n    setState([...state, newObject]);\n  };\n\n  const toggleCompletion = id => {\n    setState(state.map(item => {\n      if (item.id === id) {\n        return { ...item,\n          completed: !item.completed\n        };\n      } else {\n        return item;\n      }\n    }));\n  };\n\n  const deleteTask = () => {\n    setState(state.filter(item => !item.completed));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(InputForm, {\n      addToList: addToList,\n      deleteTask: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Todos, {\n      state: state,\n      toggleCompletion: toggleCompletion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"PadO06VdbAkT5GNMp35dZCZrejc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ehsan/Desktop/projects/rr/src/App.js"],"names":["React","useState","InputForm","Todos","todos","task","id","Math","random","completed","App","state","setState","addToList","input","newObject","toggleCompletion","map","item","deleteTask","filter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AACA,MAAMC,KAAK,GAAG,CACV;AACIC,EAAAA,IAAI,EAAE,OADV;AAEIC,EAAAA,EAAE,EAACC,IAAI,CAACC,MAAL,KAAc,IAFrB;AAGIC,EAAAA,SAAS,EAAE;AAHf,CADU,CAAd;;AAMA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACG,KAAD,CAAlC;;AAEA,QAAMS,SAAS,GAAIC,KAAD,IAAW;AACzB,UAAMC,SAAS,GAAG;AACdV,MAAAA,IAAI,EAAES,KADQ;AAEdR,MAAAA,EAAE,EAACC,IAAI,CAACC,MAAL,KAAc,IAFH;AAGdC,MAAAA,SAAS,EAAE;AAHG,KAAlB;AAKAG,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAUI,SAAV,CAAD,CAAR;AAEH,GARD;;AASA,QAAMC,gBAAgB,GAAIV,EAAD,IAAQ;AAC7BM,IAAAA,QAAQ,CAACD,KAAK,CAACM,GAAN,CAAUC,IAAI,IAAI;AACvB,UAAGA,IAAI,CAACZ,EAAL,KAAYA,EAAf,EAAmB;AACf,eAAO,EACH,GAAGY,IADA;AAEHT,UAAAA,SAAS,EAAE,CAACS,IAAI,CAACT;AAFd,SAAP;AAIH,OALD,MAKM;AACF,eAAOS,IAAP;AACH;AACJ,KATQ,CAAD,CAAR;AAWH,GAZD;;AAcA,QAAMC,UAAU,GAAG,MAAM;AACrBP,IAAAA,QAAQ,CAACD,KAAK,CAACS,MAAN,CAAaF,IAAI,IAAI,CAACA,IAAI,CAACT,SAA3B,CAAD,CAAR;AAEH,GAHD;;AAQA,sBACI;AAAA,4BACI,QAAC,SAAD;AAAW,MAAA,SAAS,EAAEI,SAAtB;AAAiC,MAAA,UAAU,EAAEM;AAA7C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEA,QAAC,KAAD;AAAO,MAAA,KAAK,EAAER,KAAd;AAAqB,MAAA,gBAAgB,EAAEK;AAAvC;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA1CD;;GAAMN,G;;KAAAA,G;AA4CN,eAAeA,GAAf","sourcesContent":["import React,{useState} from 'react';\nimport InputForm from \"./components/InputForm\";\nimport Todos from \"./components/Todos\";\nconst todos = [\n    {\n        task: \"clean\",\n        id:Math.random()*1000,\n        completed: false\n    },]\nconst App = () => {\n\n    const [state, setState] = useState(todos);\n\n    const addToList = (input) => {\n        const newObject = {\n            task: input,\n            id:Math.random()*1000,\n            completed: false\n        }\n        setState([...state,newObject])\n\n    }\n    const toggleCompletion = (id) => {\n        setState(state.map(item => {\n            if(item.id === id) {\n                return {\n                    ...item,\n                    completed: !item.completed\n                }\n            }else {\n                return item\n            }\n        } ))\n\n    }\n\n    const deleteTask = () => {\n        setState(state.filter(item => !item.completed))\n\n    }\n\n\n\n\n    return (\n        <div>\n            <InputForm addToList={addToList} deleteTask={deleteTask}/>\n        <Todos state={state} toggleCompletion={toggleCompletion} />\n\n        </div>\n    );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}